<%- include partials/header.ejs %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Cards</title>
    <style>
        .body {
            background-color: #f0f0f0;
        }
        .container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center; 
            margin: 20px auto; 
            max-width: 1200px; 
        }
        
        .card {
            width: 200px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin: 10px;
            padding: 10px;
            text-align: center;
        }
        .card img {
            max-width: 100%;
            height: auto;
            border-radius: 5px;
        }
        .card .description {
            display: none;
            margin-top: 10px;
            font-size: 14px;
        }
        .card .view-button {
            margin-top: 10px;
            cursor: pointer;
            color: blue;
        }
    </style>
</head>
<body onload="connectMetamask(),connectContract()">
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.2.7-rc.0/web3.min.js"></script>
    <div class="container">
        <div class="row mt-5">
            <div class="col-md-6 offset-md-3">
                <div id="readArea" class="text-center metamask-area">
                    <h2 class="mt-3">Connected to MetaMask</h2> 
                    <p id="userArea" class="mt-3 text-muted">Status: Not connected to MetaMask</p>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="card">
            <img src="https://thumbor.forbes.com/thumbor/fit-in/900x510/https://www.forbes.com/advisor/wp-content/uploads/2021/03/ethereum-1.jpeg" alt="Image 1">
            <p class="description">Description 1</p>
            
            <button onclick="depositContract()">view</button>
        </div>

        </div>
        <div class="card">
            <img src="https://images.assetsdelivery.com/compings_v2/tashatuvango/tashatuvango1812/tashatuvango181200237.jpg" alt="Image 2">
            <p class="description">Description 2</p>
            <button onclick="depositContract()">view</button>
        </div>

        <div class="card">
            <img src="https://schools.clipart.com/thumbs.php?f=/532/batch_184/000532-0184-000138_tnb.png" alt="Image 3">
            <p class="description">Description 3</p>
            <button onclick="depositContract()">view</button>
        </div>

        <div class="card">
            <img src="https://s2.coinmarketcap.com/static/img/coins/64x64/2300.png" alt="Image 4">
            <p class="description">Description 4</p>
            <button onclick="depositContract()">view</button>
        </div>

        <div class="card">
            <img src="https://previews.123rf.com/images/tashatuvango/tashatuvango1812/tashatuvango181200214/126685083-exchange-bitrue-copy-the-crypto-coins-or-cryptocurrency-logo-market-emblem-coins-icos-and-tokens.jpg" alt="Image 5">
            <p class="description">Description 5</p>
            <button onclick="depositContract()">view</button>
        </div>

        <div class="card">
            <img src="https://en.pimg.jp/047/603/356/1/47603356.jpg" alt="Image 6">
            <p class="description">Description 6</p>
            <button onclick="depositContract()">view</button>
        </div>
    </div>

    <script>
        let account;
        const connectMetamask = async () => {
            if(window.ethereum !== "undefined") {
                const accounts = await ethereum.request({method: "eth_requestAccounts"});
                account = accounts[0];
                document.getElementById("userArea").innerHTML = `User Account: ${account}`;
            }
        }
        const connectContract = async () => {
            const ABI = [
            {
                "inputs": [],
                "name": "deposit",
                "outputs": [],
                "stateMutability": "payable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "getAddress",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            }
        ]
            const Address = "0x1E49Df2844c260f536028b735896aB20A8B52143";
            window.web3 = await new Web3(window.ethereum);
            window.contract = await new window.web3.eth.Contract(ABI, Address);
            document.getElementById("contractArea").innerHTML = "Connected to Contract";
        }
        const depositContract = async () => {
            //const amount = document.getElementById("depositInput").value;
            await window.contract.methods.deposit().send({from: account, value: 1});
        }
    

        function toggleDescription(button) {
            var card = button.parentNode;
            var description = card.querySelector('.description');
            if (description.style.display === 'none') {
                description.style.display = 'block';
                button.textContent = 'Hide';
            } else {
                description.style.display = 'none';
                button.textContent = 'View';
            }
        }
    </script>
    
</body>
</html>

<%- include partials/footer.ejs %>
